#!/bin/sh

# To use this:
#
# * Set CTDB_NFS_CALLOUT in your CTDB configuration to point to this
#   script
#
# * Rename nfs-checks.d/{20.nfs.check,30.nlockmgr.check,50.mountd.check}
#   so that they no longer have the ".check" suffix
#
# * Install 20.nfs-ganesha.check to nfs-checks.d/20.nfs.check
######################################################################

# Exit on 1st error
set -e

if [ -z "$CTDB_CLUSTER_FILESYSTEM_TYPE" ] ; then
    CTDB_CLUSTER_FILESYSTEM_TYPE="gpfs"
fi

# Override for unit testing
if [ -z "$PROCFS_PATH" ] ; then
    PROCFS_PATH="/proc"
fi

##################################################

usage ()
{
    _c=$(basename $0)
    cat <<EOF
usage: $_c { shutdown | startup }
       $_c { stop | start | check } nfs
       $_c { releaseip-pre | takeip-pre }
       $_c { monitor-list-shares }
EOF
    exit 1
}


##################################################
# Basic service stop and start

nfs_service="nfs-ganesha-$CTDB_CLUSTER_FILESYSTEM_TYPE"

basic_stop ()
{
    case "$1" in
        nfs)
            service "$nfs_service" stop
            ;;
        *)
            usage
    esac
}

basic_start ()
{
    case "$1" in
        nfs)
            service "$nfs_service" start
            ;;
        *)
            usage
    esac
}

##################################################
# "stop" and "start" options for restarting

service_stop ()
{
    case "$1" in
        nfs)
            basic_stop "nfs"
            ;;
        nlockmgr)
            # Do nothing - used by statd-callout
            :
            ;;
        *)
            usage
    esac
}

service_start ()
{
    case "$1" in
        nfs)
            basic_start "nfs"
            ;;
        nlockmgr)
            # Do nothing - used by statd-callout
            :
            ;;
        *)
            usage
    esac
}

##################################################
# Nitty gritty - monitoring and IP handling

GANRECDIR="/var/lib/nfs/ganesha"
EVENT_TAKE_IP=5
EVENT_RELEASE_IP=2

get_cluster_fs_state ()
{
    case $CTDB_CLUSTER_FILESYSTEM_TYPE in
        gpfs)
            /usr/lpp/mmfs/bin/mmgetstate | awk 'NR == 4 { print $3 }'
            ;;
        *)
            echo "File system $CTDB_CLUSTER_FILESYSTEM_TYPE not supported"
	    exit 1
            ;;
   esac
}

create_ganesha_recdirs ()
{
    [ -n "$CTDB_GANESHA_REC_SUBDIR" ] || CTDB_GANESHA_REC_SUBDIR=".ganesha"

    _mounts=$(mount -t $CTDB_CLUSTER_FILESYSTEM_TYPE)
    if [ -z "$_mounts" ]; then
      echo "startup $CTDB_CLUSTER_FILESYSTEM_TYPE not ready"
      exit 0
    fi
    _mntpt=$(echo "$_mounts" | sort | awk 'NR == 1 {print $3}')
    _link_dst="${_mntpt}/${CTDB_GANESHA_REC_SUBDIR}"
    mkdir -vp "$_link_dst"
    if [ ! -L "$GANRECDIR" ] ; then
	rm -vrf "$GANRECDIR"
    else
	_t=$(readlink "$GANRECDIR")
	if [ "$_t" != "$_link_dst" ] ; then
	    rm -v "$GANRECDIR"
	fi
    fi
    # This is not an "else".  It also re-creates the link if it was
    # removed above!
    if [ ! -e "$GANRECDIR" ]; then
        ln -sv "$_link_dst" "$GANRECDIR"
    fi
}

service_check ()
{
    create_ganesha_recdirs

    # Always succeed if cluster filesystem is not active
    _cluster_fs_state=$(get_cluster_fs_state)
    if [ $_cluster_fs_state != "active" ] ; then
        exit 0
    fi

    # Check that NFS Ganesha is running, according to PID file
    _pidfile="/var/run/ganesha.nfsd.pid"
    _ganesha="/usr/bin/ganesha.nfsd"
    if ! { read _pid < "$_pidfile" && \
           grep "$_ganesha" "${PROCFS_PATH}/${_pid}/cmdline" ; } >/dev/null 2>&1 ; then
        echo "ERROR: NFS Ganesha not running according to PID file"
        return 1
    fi

    return 0
}

#-------------------------------------------------

nfs_releaseip ()
{
    case  $CTDB_CLUSTER_FILESYSTEM_TYPE in
        gpfs)
	    _ip_address=$2
	    grace_period $EVENT_RELEASE_IP:$_ip_address
            ;;
    esac
}

nfs_takeip ()
{
    case  $CTDB_CLUSTER_FILESYSTEM_TYPE in
        gpfs)
	    _ip_address=$2
	    grace_period $EVENT_TAKE_IP:$_ip_address
            ;;
    esac
}

##################################################
# service init startup and final shutdown

nfs_shutdown ()
{
    basic_stop "nfs"
}

nfs_startup ()
{
    create_ganesha_recdirs

    basic_stop "nfs" || true
    basic_start "nfs"
    _f="${PROCFS_PATH}/sys/net/ipv4/tcp_tw_recycle"
    if [ "$_f" ] ; then
        echo 1 >"$_f"
    fi
}

##################################################
# list share directories

nfs_monitor_list_shares ()
{
    grep Path /etc/ganesha/$CTDB_CLUSTER_FILESYSTEM_TYPE.ganesha.exports.conf |
        cut -f2 -d\" |
        sort -u
}

##################################################

nfs_register ()
{
cat <<EOF
shutdown
startup
stop
start
check
releaseip-pre
takeip-pre
monitor-list-shares
EOF
}

##################################################

action="$1"
shift

case "$action" in
    shutdown)            nfs_shutdown            ;;
    startup)             nfs_startup             ;;
    stop)                service_stop "$1"       ;;
    start)               service_start "$1"      ;;
    check)               service_check "$1"      ;;
    releaseip-pre)       nfs_releaseip "$@"      ;;
    takeip-pre)          nfs_takeip "$@"         ;;
    monitor-list-shares) nfs_monitor_list_shares ;;
    register)		 nfs_register		 ;;
    monitor-pre|monitor-post|takeip|releaseip)
        # Not required/implemented
        :
        ;;
    *)
        usage
esac

